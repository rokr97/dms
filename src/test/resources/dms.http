### Get non-existing document with random uuid
GET http://localhost:8080/dms/documents/{{$uuid}}
Accept: application/json

> {%
client.test("Resource with random UUID is not found", function() {
  client.assert(response.status === 404, "Response status is not 404, actual value is " + response.status);
});
%}


### Send a form with the text and file fields
POST http://localhost:8080/dms/documents/
Content-Type: multipart/form-data; boundary=WebAppBoundary

--WebAppBoundary
Content-Disposition: form-data; name="ownerId"
Content-Type: text/plain

user1@bank.my
--WebAppBoundary
Content-Disposition: form-data; name="documentName"
Content-Type: text/plain

my-pdf-document
--WebAppBoundary
Content-Disposition: form-data; name="file"; filename="my.pdf"
Content-Type: application/sotona

< ./test-pdf-document.pdf
--WebAppBoundary--

> {%
client.test("Document successfully uploaded", function() {
  client.assert(response.status === 201, "Response status is not 201 ('created'), actual value is " + response.status);
});

client.test("'Location' header is set in response", function() {
  var location = response.headers.valueOf("Location");
  client.global.set('new_document_location', location);

  var uuidPattern = "[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
  var documentResourcePathPattern = "/dms/documents/" + uuidPattern
  client.assert(location.search(documentResourcePathPattern) > -1, "Expected location to match 'http://{host}:{port}/dms/documents/{uuid}' pattern but actual value is " + location);
});
%}

### Get uploaded document
GET {{new_document_location}}
Accept: application/pdf

> {%
client.test("Document successfully downloaded", function() {
  client.assert(response.status === 200, "Response status is not 200, actual value is " + response.status);
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/pdf", "Expected 'application/pdf' but received '" + type + "'");
});
%}

### Delete uploaded document
DELETE {{new_document_location}}

> {%
client.test("Document deleted successfully", function() {
  client.assert(response.status === 204, "Response status is not 204 ('no content'), actual value is " + response.status);
});

%}

### Try deleting deleted document
DELETE {{new_document_location}}

> {%
client.test("Non-existing document is not deleted", function() {
  client.assert(response.status === 404, "Response status is not 404 ('not found'), actual value is " + response.status);
});

%}

#### Create a document with missing fields
#POST http://localhost:8080/dms/documents
#Content-Type: application/json
#
#{
#  "ownerId": "user@bank.my",
#  "fileName": "myFile",
#  "fileType": null,
#  "data": "dGVzdCBwZGYgZG9jdW1lbnQ="
#}
#
### Get all documents
GET http://localhost:8080/dms/documents/
Accept: application/json

> {%
client.test("'List all documents' executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
//TODO: validate entries count
%}
